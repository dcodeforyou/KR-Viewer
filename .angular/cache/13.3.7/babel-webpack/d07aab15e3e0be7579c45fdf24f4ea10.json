{"ast":null,"code":"import { createSelector } from \"@ngrx/store\";\nimport { StateEnum } from \"../models/enums.model\";\nexport const selectRoot = state => state.krs;\nexport const selectKRDetailsList = createSelector(selectRoot, state => state.krDetailsList);\nexport const selectContentLoading = createSelector(selectRoot, state => state.contentLoaded);\nexport const selectActiveRepo = createSelector(selectRoot, state => {\n  console.log('SELECTED REPO: ', state.activeRepo);\n  return state.activeRepo;\n});\nexport const selectSortByOptions = createSelector(selectRoot, state => state.sortByOptions);\nexport const selectRepoOptions = createSelector(selectRoot, state => state.repoOptions);\nexport const selectKRLoading = createSelector(selectRoot, state => state.loading);\nexport const selectActiveStates = createSelector(selectRoot, state => state.activeStates);\nexport const selectSortBySelectedOption = createSelector(selectRoot, state => state.sortBySelectedOption);\nexport const selectActiveRepoKRDetailsList = createSelector(selectKRDetailsList, selectActiveRepo, (data, activeRepo) => data ? data[activeRepo] : []);\nexport const selectKRList = createSelector(selectActiveRepoKRDetailsList, detailsList => {\n  let list = [];\n  list = detailsList.map(detail => {\n    let currKR = {\n      id: detail.card.id,\n      krCardNumber: detail.card.krCardNumber,\n      title: detail.card.title,\n      state: detail.card.state,\n      date: detail.card.date,\n      status: detail.card.status\n    };\n    return currKR;\n  });\n  console.log('selectKRList', list);\n  return list;\n});\nexport const selectFilteredKRList = createSelector(selectKRList, selectActiveStates, (list, activeStates) => {\n  if (activeStates.length == 1 && activeStates[0] === StateEnum.ALL) return list;\n  return list.filter(kr => activeStates.some(state => state === kr.state));\n});\nexport const selectSortedKRList = createSelector(selectFilteredKRList, selectSortBySelectedOption, (list, sortBy) => {\n  console.log(list);\n  return list.slice().sort((a, b) => {\n    switch (sortBy) {\n      case 1:\n        return b.krCardNumber.localeCompare(a.krCardNumber);\n\n      case 2:\n        return a.krCardNumber.localeCompare(b.krCardNumber);\n        ;\n\n      case 3:\n        return b.date.localeCompare(a.date);\n\n      default:\n        return a.date.localeCompare(b.date);\n    }\n  });\n});\nexport const getSelectedRepo = createSelector(selectRoot, state => state.activeRepo);\nexport const selectedKRId = createSelector(selectRoot, state => state.activeKRId);\nexport const selectedKR = createSelector(selectActiveRepoKRDetailsList, selectedKRId, (detailsList, id) => detailsList.find(detail => detail.card.id === id));\nexport const isKRSelected = createSelector(selectedKRId, id => id !== '' ? true : false);","map":null,"metadata":{},"sourceType":"module"}