{"ast":null,"code":"import { delay, of } from 'rxjs';\nimport { krDetailMockJson, krListMockJson } from '../mocks/kr-mock';\nimport { StateEnum, stateValues } from '../models/enums.model';\nimport { repoOptions, sortByOptions } from '../constants/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let KrService = /*#__PURE__*/(() => {\n  class KrService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getKRDetailsList() {\n      const url = 'http://localhost:4201/getKRList';\n      return this.http.get(url).pipe(delay(2000));\n    }\n\n    getKRList() {\n      //\n      return of(krListMockJson);\n    }\n\n    getSortOptions() {\n      return of(sortByOptions);\n    }\n\n    getRepoOptions() {\n      return of(repoOptions);\n    }\n\n    getSelectedKR(id, activeRepo) {\n      const selectedKR = krDetailMockJson.find(kr => kr.card.id === id);\n      return of(selectedKR);\n    }\n\n    getKeyName(value) {\n      var _a;\n\n      return (_a = Object.entries(StateEnum).find(([key, val]) => val === value)) === null || _a === void 0 ? void 0 : _a[0];\n    }\n\n    updateKRDetailsList(detailsList) {\n      const listValues = Object.values(detailsList);\n\n      for (let value of listValues) {\n        this.updateKrStatus(value);\n      }\n\n      console.log('UPDATED STATUS: ', detailsList);\n      return of(detailsList);\n    }\n\n    updateKrStatus(list) {\n      console.log('HERE');\n      list.forEach(kr => {\n        const krEnum = this.getKeyName(kr.card.state);\n        const krStatus = StateEnum[krEnum];\n        const isInvalid = kr === null || kr === void 0 ? void 0 : kr.linkedKrCards.some(card => {\n          const cardEnum = this.getKeyName(card.state);\n\n          if (krEnum && cardEnum) {\n            const cardStatus = StateEnum[cardEnum];\n            const isInvalidStatus = stateValues[cardStatus] < stateValues[krStatus];\n            console.log(stateValues[cardStatus] + \" - \" + stateValues[krStatus]);\n            console.log('#####: ', isInvalidStatus);\n            return isInvalidStatus;\n          }\n\n          return true;\n        });\n        console.log('OVERALL STATUS: ', isInvalid);\n        kr.card.status = isInvalid ? false : true;\n        console.log('OVERALL KR STATUS: ', kr.card.status);\n      });\n      return of(list);\n    }\n\n  }\n\n  KrService.ɵfac = function KrService_Factory(t) {\n    return new (t || KrService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  KrService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: KrService,\n    factory: KrService.ɵfac,\n    providedIn: 'root'\n  });\n  return KrService;\n})();","map":null,"metadata":{},"sourceType":"module"}